@startuml Shapes Class Diagram
title Selected Shapes Class Diagram

package logic {
    package observer {
        package interfaces {
            interface IPublisher <T> {
                subscribe(sub: IContextualSubscriber<T>)
                announce(updatedValue: T)
            }

            interface ISubscriber<T> {
                notifyUpdate(updatedValue: T): void
            }

            interface IStatefulListPublisher<E> {
                add(element: E): void
                remove(element: E): void
            }

            interface IRetriggerable {
                retrigger(): void
            }

            interface IStatefulPublisher<T>{}
        }

        class SimplePublisher<T> {
            - subscribers: ArrayList<ISubscriber<T>>
        }

        class StatefulListPublisher<E> {
            + StatefulListPublisher(parent: IPublisher)
        }
    }

    class ClickHandler {
        - visibleShapesPublisher: IStatefulListPublisher
        - selectedShapesPublisher: IPublisher
        - visibleShapes: List<IPaintShape>
        - selectedShapes: List<IPaintShape>
        --
        + ClickHandler(visibleShapesPublisher: IPublisher, selectedShapesPublisher: IPublisher)
    }

    package commands {
        class AddShapeCommand 
        class MoveShapesCommand
    }

    package dragstrategy {
        interface IDragStrategy{
            endDrag(point: Point): void
        }
        class MoveDragStrategy
        class AddShapeDragStrategy
        class SelectDragStrategy
    }
}

package view.gui {
    class PaintCanvas {}
}

StatefulListPublisher ..|> IStatefulListPublisher
StatefulListPublisher --o IPublisher
IPublisher --> ISubscriber : < notifies
IStatefulPublisher --|> IPublisher
IStatefulPublisher --|> IRetriggerable
IStatefulListPublisher --|> IStatefulPublisher : T: List<E>
SimplePublisher ..|> IPublisher
PaintCanvas "T: IPaintShape[]" ..|> ISubscriber : < gets visible\nshape list updates
ClickHandler "T: IPaintShape[]" ..|> ISubscriber : < gets visible\nshape list updates
AddShapeCommand --o IStatefulListPublisher : < sends visible shapes
AddShapeDragStrategy --o IStatefulListPublisher : < populates command
ClickHandler --* IStatefulListPublisher
ClickHandler --> MoveDragStrategy
ClickHandler --> SelectDragStrategy
ClickHandler --> AddShapeDragStrategy
ClickHandler --* IDragStrategy : stateful dragging
AddShapeDragStrategy --> AddShapeCommand : creates\nand invokes
MoveDragStrategy --> MoveShapesCommand : creates\nand invokes
MoveDragStrategy ..|> IDragStrategy
SelectDragStrategy ..|> IDragStrategy
AddShapeDragStrategy ..|> IDragStrategy

@enduml
